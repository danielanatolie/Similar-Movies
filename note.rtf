{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww13960\viewh7820\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Used real-world data to build a recommender systems:
\b \
\
Technique: User-Based Collaborative Filtering (recommending items based on what you and what everyone else did)
\b0 \
- Build a matrix of things each user bought/viewed/rated\
- Compute similarity scores between users\
- Find users similar to you\
- Recommend stuff they bought/viewed/rated that you haven\'92t yet \
-> Downfall:\
- tastes are always changing over time \
- there are usually more people than items \
- Shelling attacks, where people started an item: are then creating random users to create a sequence of liked items and then liked their own item (just so your system can recommend their item)\
\
\
A better approach:\

\b Technique: Item-based collaborative filtering (used by Amazon) 
\b0 \
-> People who liked this also liked / people who rated this also rated this\
- All of the downfalls above are basically negative since items don\'92t change, less items than people, shelling attacks are harder to make\
- Find every pair of items that were used by the same individual \
- Measure the similarity across all users who watched both \
- Sort by movie, then by similarity strength \
\
\
\
}